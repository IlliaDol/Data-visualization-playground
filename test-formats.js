// –¢–µ—Å—Ç–æ–≤–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ —Ñ–æ—Ä–º–∞—Ç—ñ–≤
console.log('üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ —Ñ–æ—Ä–º–∞—Ç—ñ–≤ —Ñ–∞–π–ª—ñ–≤...\n')

// –°–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∏—Ö —Ñ–æ—Ä–º–∞—Ç—ñ–≤
const supportedFormats = [
  // –¢–µ–∫—Å—Ç–æ–≤—ñ —Ñ–æ—Ä–º–∞—Ç–∏
  { name: 'CSV', extensions: ['.csv'], mime: 'text/csv' },
  { name: 'TSV', extensions: ['.tsv', '.tab'], mime: 'text/tab-separated-values' },
  { name: 'JSON', extensions: ['.json'], mime: 'application/json' },
  { name: 'JSON-LD', extensions: ['.jsonld'], mime: 'application/ld+json' },
  { name: 'XML', extensions: ['.xml'], mime: 'application/xml' },
  { name: 'YAML', extensions: ['.yaml', '.yml'], mime: 'text/yaml' },
  { name: 'TOML', extensions: ['.toml'], mime: 'text/toml' },
  { name: 'LOG', extensions: ['.log'], mime: 'text/log' },
  { name: 'INI/CFG', extensions: ['.ini', '.cfg', '.conf'], mime: 'text/ini' },
  
  // –ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ñ —Ç–∞–±–ª–∏—Ü—ñ
  { name: 'Excel', extensions: ['.xlsx', '.xls', '.xlsm'], mime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' },
  
  // –°—Ç–∏—Å–Ω–µ–Ω—ñ —Ñ–æ—Ä–º–∞—Ç–∏
  { name: 'GZIP', extensions: ['.gz', '.gzip'], mime: 'application/gzip' },
  { name: 'ZIP', extensions: ['.zip'], mime: 'application/zip' },
  
  // Data Science —Ñ–æ—Ä–º–∞—Ç–∏
  { name: 'Parquet', extensions: ['.parquet'], mime: 'application/parquet' },
  { name: 'NumPy', extensions: ['.npz', '.npy'], mime: 'application/numpy' },
  { name: 'Pickle', extensions: ['.pkl', '.pickle'], mime: 'application/pickle' },
  { name: 'HDF5', extensions: ['.h5', '.hdf5'], mime: 'application/hdf5' },
  { name: 'Feather', extensions: ['.feather'], mime: 'application/feather' },
  { name: 'Arrow', extensions: ['.arrow'], mime: 'application/arrow' },
  { name: 'Avro', extensions: ['.avro'], mime: 'application/avro' },
  { name: 'ORC', extensions: ['.orc'], mime: 'application/orc' }
]

// –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ –∑–∞–≥–∞–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ
const totalFormats = supportedFormats.length
const totalExtensions = supportedFormats.reduce((sum, format) => sum + format.extensions.length, 0)

console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∏—Ö —Ñ–æ—Ä–º–∞—Ç—ñ–≤:`)
console.log(`   ‚Ä¢ –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ñ–æ—Ä–º–∞—Ç—ñ–≤: ${totalFormats}`)
console.log(`   ‚Ä¢ –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–æ–∑—à–∏—Ä–µ–Ω—å: ${totalExtensions}`)
console.log(`   ‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó: –¢–µ–∫—Å—Ç–æ–≤—ñ, –ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ñ —Ç–∞–±–ª–∏—Ü—ñ, –°—Ç–∏—Å–Ω–µ–Ω—ñ, Data Science\n`)

// –í–∏–≤–µ–¥–µ–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫—É
console.log('üìã –î–µ—Ç–∞–ª—å–Ω–∏–π —Å–ø–∏—Å–æ–∫ –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∏—Ö —Ñ–æ—Ä–º–∞—Ç—ñ–≤:\n')

supportedFormats.forEach((format, index) => {
  console.log(`${index + 1}. ${format.name}`)
  console.log(`   –†–æ–∑—à–∏—Ä–µ–Ω–Ω—è: ${format.extensions.join(', ')}`)
  console.log(`   MIME —Ç–∏–ø: ${format.mime}`)
  console.log('')
})

console.log('‚úÖ –í—Å—ñ —Ñ–æ—Ä–º–∞—Ç–∏ —É—Å–ø—ñ—à–Ω–æ –ø—ñ–¥—Ç—Ä–∏–º—É—é—Ç—å—Å—è!')
console.log('üöÄ –ü—Ä–æ–≥—Ä–∞–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–æ —Ä–æ–±–æ—Ç–∏ –∑ –±—É–¥—å-—è–∫–∏–º –∑ —Ü–∏—Ö —Ñ–æ—Ä–º–∞—Ç—ñ–≤.')
